load "msh3"
load "tetgen"
load "medit"
include "MeshSurface.idp"

mesh3 MacroTh;
int RM0;
int[int, int] RM1(8, 8), RM2(8, 8), RM3(8, 8), RM4(8, 8), 
              RM5(8, 8), RM6(8, 8), RM7(8, 8), RM8(8, 8);

{
	int n = 8;
	real epsilon = 1./n;
	real M2x = 0.25;
	real M2y = 0.25;
	real M2z = 0.25;
	real M2Lenx = 0.5;
	real M2Leny = 0.5;
	real M2Lenz = 0.5;
	
	int[int] N=[40, 40, 40];
	int[int] N2=[4, 4, 4];
	real[int ,int] B = [[0, 1], [0, 1], [0, 1]];
	real[int, int] B2(3, 2);
	int[int, int] L = [[1, 2], [3, 4], [5, 6]];
	int[int, int] L2 =[[7, 8], [9, 10], [11, 12]];
	mesh3 Th = SurfaceHex(N, B, L, 1);
	for(int i = 0; i < n; i++)
	{
		for(int j = 0; j < n; j++)
		{
			for(int k=0; k < n; k++)
			{
				B2(0, 0) = (M2x+k)*epsilon;
				B2(0, 1) = (M2x+M2Lenx+k)*epsilon;
				B2(1, 0) = (M2y+j)*epsilon;
				B2(1, 1) = (M2y+M2Leny+j)*epsilon;
				B2(2, 0) = (M2z+i)*epsilon;
				B2(2, 1) = (M2z+M2Lenz+i)*epsilon;
				//cout << B2; 
				mesh3 TempTh = SurfaceHex(N2, B2, L2, 1);
				Th = Th + TempTh;
			}
		}
	}

	
 	MacroTh = tetg(Th);
 	plot(Th, wait=1);
 	//savemesh(MacroTh, "MacroMeshCube3D8.mesh");
	RM0 = MacroTh(0.001, 0.001, 0.001).region;
	for(int j = 0; j < n; j++)
	{
		for(int k = 0; k < n; k++)
		{
			real cx = (M2x+M2Lenx/2+k)*epsilon;
			real cy = (M2y+M2Leny/2+j)*epsilon;
			RM1(j, k) = MacroTh(cx, cy, (M2z+M2Lenz/2)*epsilon).region;
			RM2(j, k) = MacroTh(cx, cy, (M2z+M2Lenz/2+1)*epsilon).region;
			RM3(j, k) = MacroTh(cx, cy, (M2z+M2Lenz/2+2)*epsilon).region;
			RM4(j, k) = MacroTh(cx, cy, (M2z+M2Lenz/2+3)*epsilon).region;
			RM5(j, k) = MacroTh(cx, cy, (M2z+M2Lenz/2+4)*epsilon).region;
			RM6(j, k) = MacroTh(cx, cy, (M2z+M2Lenz/2+5)*epsilon).region;
			RM7(j, k) = MacroTh(cx, cy, (M2z+M2Lenz/2+6)*epsilon).region;
			RM8(j, k) = MacroTh(cx, cy, (M2z+M2Lenz/2+7)*epsilon).region;
		}
	}
	
	for(int i=0; i < n; i++)
	{
		for(int j=0; j < n; j++)
		{
			cout << RM1(i, j) << " ";
		}
		cout << endl;
	}
	
    
}

