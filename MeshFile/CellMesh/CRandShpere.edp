include "../MeshFunc3D.edp"
func mesh3 CSphereRand(int count)
{
	int[int] N=[50, 50, 50];
	real[int ,int] B = [[0, 1], [0, 1], [0, 1]];
	int[int, int] L = [[1, 2], [3, 4], [5, 6]];
	mesh3 Th = SurfaceHex(N, B, L, 1);
	real[int] radius(count), rx(count), ry(count), rz(count);
	int c = time();
	randinit(c);
	for(int i = 0; i < count; i++)
	{
		int flag = true;
		while(flag)
		{
			radius[i] = 0.05*randreal1() + 0.1;
			rx[i] = randreal3();
			ry[i] = randreal3();
			rz[i] = randreal3();
			if(rx[i] + radius[i] < 1 && rx[i] - radius[i] > 0 && 
		       ry[i] + radius[i] < 1 && ry[i] - radius[i] > 0 &&
		       rz[i] + radius[i] < 1 && rz[i] - radius[i] > 0)
		    {
			    int j = 0;
			    for(j = 0; j < i; j++)
			    {
				    if(radius[i] + radius[j] >= sqrt((rx[i] - rx[j])^2 + (ry[i] - ry[j])^2 + (rz[i] - rz[j])^2))
				    {
					    break;
					}
				}
				if(j == i)
				    flag = false;
		     }
	    }
	    mesh3 ThBall = Sphere(rx[i], ry[i], rz[i], radius[i], 0.03, 10, 1);
	    Th = Th + ThBall; 
    }
	real[int] domain((count+1)*5);
	domain[0] = 0.01;
	domain[1] = 0.01;
	domain[2] = 0.01;
	domain[3] = 53;
	domain[4] = 0.001;
	for(int i = 0; i < count; i++)
	{
		domain[(i+1)*5] = rx[i];
		domain[(i+1)*5 + 1] = ry[i];
		domain[(i+1)*5 + 2] = rz[i];
		domain[(i+1)*5 + 3] = 54;
		domain[(i+1)*5 + 4] = 0.001;
	}
 	mesh3 CellTh = tetg(Th, switch="paAAQYY", nbofregions=count + 1, regionlist=domain);
 	return CellTh;
}

mesh3 CellTh = CSphereRand(40);
plot(CellTh, ps="CBallRand.eps", wait=1);